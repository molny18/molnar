# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    app.music.status.parser.class: 'AppBundle\Service\MusicStatusMessageParser'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: false
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    app.music_message_parser:
        class: AppBundle\Service\MusicStatusMessageParser
        public: true

    app.music_status_handler:
        class: AppBundle\Service\MusicStatusHandler
        calls:
            - [setMessageParser,['@app.music_message_parser']]
        public: true

    app.abstract.manager:
        class: AppBundle\Manager\BaseManager

    app.music.manager:
        class: AppBundle\Manager\MusicManager
        arguments:
            - '@Doctrine\Common\Persistence\ObjectManager'
            - 'AppBundle\Entity\MusicFile'
        public: true

    app.music.parser:
        class: AppBundle\Service\MusicParser
        calls:
            - [setManager,['@app.music.manager']]
            - [setDir,['app/media/music']]
            - [setCommandHelper,['@app.command.helper']]
        public: true

    app.music_refresh.handler:
        class: AppBundle\Service\Handler\MusicRefreshHandler
        calls:
            - [setParser,['@app.music.parser']]

    app.command.helper:
        class: AppBundle\Service\Helper\Mp3TagHelper
        calls:
            - [setOriginalDir,['/home/molnar.mate/sample']]

app:
    music_parser:
        music_directory: '/app/media/music'